{
  "version": 3,
  "sources": ["../../prismjs/components/prism-docker.js"],
  "sourcesContent": ["(function (Prism) {\r\n\r\n\t// Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\r\n\t// that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\r\n\r\n\tvar spaceAfterBackSlash = /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source;\r\n\t// At least one space, comment, or line break\r\n\tvar space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source\r\n\t\t.replace(/<SP_BS>/g, function () { return spaceAfterBackSlash; });\r\n\r\n\tvar string = /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/.source;\r\n\tvar option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(/<STR>/g, function () { return string; });\r\n\r\n\tvar stringRule = {\r\n\t\tpattern: RegExp(string),\r\n\t\tgreedy: true\r\n\t};\r\n\tvar commentRule = {\r\n\t\tpattern: /(^[ \\t]*)#.*/m,\r\n\t\tlookbehind: true,\r\n\t\tgreedy: true\r\n\t};\r\n\r\n\t/**\r\n\t * @param {string} source\r\n\t * @param {string} flags\r\n\t * @returns {RegExp}\r\n\t */\r\n\tfunction re(source, flags) {\r\n\t\tsource = source\r\n\t\t\t.replace(/<OPT>/g, function () { return option; })\r\n\t\t\t.replace(/<SP>/g, function () { return space; });\r\n\r\n\t\treturn RegExp(source, flags);\r\n\t}\r\n\r\n\tPrism.languages.docker = {\r\n\t\t'instruction': {\r\n\t\t\tpattern: /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'options': {\r\n\t\t\t\t\tpattern: re(/(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source, 'i'),\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\tgreedy: true,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'property': {\r\n\t\t\t\t\t\t\tpattern: /(^|\\s)--[\\w-]+/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'string': [\r\n\t\t\t\t\t\t\tstringRule,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\r\n\t\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'operator': /\\\\$/m,\r\n\t\t\t\t\t\t'punctuation': /=/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'keyword': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// https://docs.docker.com/engine/reference/builder/#healthcheck\r\n\t\t\t\t\t\tpattern: re(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/.source, 'i'),\r\n\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\tgreedy: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// https://docs.docker.com/engine/reference/builder/#from\r\n\t\t\t\t\t\tpattern: re(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/.source, 'i'),\r\n\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\tgreedy: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// https://docs.docker.com/engine/reference/builder/#onbuild\r\n\t\t\t\t\t\tpattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\r\n\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\tgreedy: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpattern: /^\\w+/,\r\n\t\t\t\t\t\tgreedy: true\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t'comment': commentRule,\r\n\t\t\t\t'string': stringRule,\r\n\t\t\t\t'variable': /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\r\n\t\t\t\t'operator': /\\\\$/m\r\n\t\t\t}\r\n\t\t},\r\n\t\t'comment': commentRule\r\n\t};\r\n\r\n\tPrism.languages.dockerfile = Prism.languages.docker;\r\n\r\n}(Prism));\r\n"],
  "mappings": ";CAAC,SAAUA,QAAO;AAKjB,MAAI,sBAAsB,sDAAsD;AAEhF,MAAI,QAAQ,0CAA0C,OACpD,QAAQ,YAAY,WAAY;AAAE,WAAO;AAAA,EAAqB,CAAC;AAEjE,MAAI,SAAS,0EAA0E;AACvF,MAAI,SAAS,8CAA8C,OAAO,QAAQ,UAAU,WAAY;AAAE,WAAO;AAAA,EAAQ,CAAC;AAElH,MAAI,aAAa;AAAA,IAChB,SAAS,OAAO,MAAM;AAAA,IACtB,QAAQ;AAAA,EACT;AACA,MAAI,cAAc;AAAA,IACjB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,EACT;AAOA,WAAS,GAAG,QAAQ,OAAO;AAC1B,aAAS,OACP,QAAQ,UAAU,WAAY;AAAE,aAAO;AAAA,IAAQ,CAAC,EAChD,QAAQ,SAAS,WAAY;AAAE,aAAO;AAAA,IAAO,CAAC;AAEhD,WAAO,OAAO,QAAQ,KAAK;AAAA,EAC5B;AAEA,EAAAA,OAAM,UAAU,SAAS;AAAA,IACxB,eAAe;AAAA,MACd,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA,QACP,WAAW;AAAA,UACV,SAAS,GAAG,gDAAgD,QAAQ,GAAG;AAAA,UACvE,YAAY;AAAA,UACZ,QAAQ;AAAA,UACR,QAAQ;AAAA,YACP,YAAY;AAAA,cACX,SAAS;AAAA,cACT,YAAY;AAAA,YACb;AAAA,YACA,UAAU;AAAA,cACT;AAAA,cACA;AAAA,gBACC,SAAS;AAAA,gBACT,YAAY;AAAA,cACb;AAAA,YACD;AAAA,YACA,YAAY;AAAA,YACZ,eAAe;AAAA,UAChB;AAAA,QACD;AAAA,QACA,WAAW;AAAA,UACV;AAAA;AAAA,YAEC,SAAS,GAAG,iEAAiE,QAAQ,GAAG;AAAA,YACxF,YAAY;AAAA,YACZ,QAAQ;AAAA,UACT;AAAA,UACA;AAAA;AAAA,YAEC,SAAS,GAAG,iEAAiE,QAAQ,GAAG;AAAA,YACxF,YAAY;AAAA,YACZ,QAAQ;AAAA,UACT;AAAA,UACA;AAAA;AAAA,YAEC,SAAS,GAAG,oBAAoB,QAAQ,GAAG;AAAA,YAC3C,YAAY;AAAA,YACZ,QAAQ;AAAA,UACT;AAAA,UACA;AAAA,YACC,SAAS;AAAA,YACT,QAAQ;AAAA,UACT;AAAA,QACD;AAAA,QACA,WAAW;AAAA,QACX,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,YAAY;AAAA,MACb;AAAA,IACD;AAAA,IACA,WAAW;AAAA,EACZ;AAEA,EAAAA,OAAM,UAAU,aAAaA,OAAM,UAAU;AAE9C,GAAE,KAAK;",
  "names": ["Prism"]
}
