{
  "version": 3,
  "sources": ["../../prismjs/components/prism-stylus.js"],
  "sourcesContent": ["(function (Prism) {\r\n\tvar unit = {\r\n\t\tpattern: /(\\b\\d+)(?:%|[a-z]+)/,\r\n\t\tlookbehind: true\r\n\t};\r\n\t// 123 -123 .123 -.123 12.3 -12.3\r\n\tvar number = {\r\n\t\tpattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\r\n\t\tlookbehind: true\r\n\t};\r\n\r\n\tvar inside = {\r\n\t\t'comment': {\r\n\t\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'url': {\r\n\t\t\tpattern: /\\burl\\(([\"']?).*?\\1\\)/i,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t'string': {\r\n\t\t\tpattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t'interpolation': null, // See below\r\n\t\t'func': null, // See below\r\n\t\t'important': /\\B!(?:important|optional)\\b/i,\r\n\t\t'keyword': {\r\n\t\t\tpattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'hexcode': /#[\\da-f]{3,6}/i,\r\n\t\t'color': [\r\n\t\t\t/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\r\n\t\t\t{\r\n\t\t\t\tpattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'unit': unit,\r\n\t\t\t\t\t'number': number,\r\n\t\t\t\t\t'function': /[\\w-]+(?=\\()/,\r\n\t\t\t\t\t'punctuation': /[(),]/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t'entity': /\\\\[\\da-f]{1,8}/i,\r\n\t\t'unit': unit,\r\n\t\t'boolean': /\\b(?:false|true)\\b/,\r\n\t\t'operator': [\r\n\t\t\t// We want non-word chars around \"-\" because it is\r\n\t\t\t// accepted in property names.\r\n\t\t\t/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\r\n\t\t],\r\n\t\t'number': number,\r\n\t\t'punctuation': /[{}()\\[\\];:,]/\r\n\t};\r\n\r\n\tinside['interpolation'] = {\r\n\t\tpattern: /\\{[^\\r\\n}:]+\\}/,\r\n\t\talias: 'variable',\r\n\t\tinside: {\r\n\t\t\t'delimiter': {\r\n\t\t\t\tpattern: /^\\{|\\}$/,\r\n\t\t\t\talias: 'punctuation'\r\n\t\t\t},\r\n\t\t\trest: inside\r\n\t\t}\r\n\t};\r\n\tinside['func'] = {\r\n\t\tpattern: /[\\w-]+\\([^)]*\\).*/,\r\n\t\tinside: {\r\n\t\t\t'function': /^[^(]+/,\r\n\t\t\trest: inside\r\n\t\t}\r\n\t};\r\n\r\n\tPrism.languages.stylus = {\r\n\t\t'atrule-declaration': {\r\n\t\t\tpattern: /(^[ \\t]*)@.+/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'atrule': /^@[\\w-]+/,\r\n\t\t\t\trest: inside\r\n\t\t\t}\r\n\t\t},\r\n\t\t'variable-declaration': {\r\n\t\t\tpattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'variable': /^\\S+/,\r\n\t\t\t\trest: inside\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'statement': {\r\n\t\t\tpattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'keyword': /^\\S+/,\r\n\t\t\t\trest: inside\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// A property/value pair cannot end with a comma or a brace\r\n\t\t// It cannot have indented content unless it ended with a semicolon\r\n\t\t'property-declaration': {\r\n\t\t\tpattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'property': {\r\n\t\t\t\t\tpattern: /^[^\\s:]+/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'interpolation': inside.interpolation\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\trest: inside\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t// A selector can contain parentheses only as part of a pseudo-element\r\n\t\t// It can span multiple lines.\r\n\t\t// It must end with a comma or an accolade or have indented content.\r\n\t\t'selector': {\r\n\t\t\tpattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': inside.interpolation,\r\n\t\t\t\t'comment': inside.comment,\r\n\t\t\t\t'punctuation': /[{},]/\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'func': inside.func,\r\n\t\t'string': inside.string,\r\n\t\t'comment': {\r\n\t\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t'interpolation': inside.interpolation,\r\n\t\t'punctuation': /[{}()\\[\\];:.]/\r\n\t};\r\n}(Prism));\r\n"],
  "mappings": ";CAAC,SAAUA,QAAO;AACjB,MAAI,OAAO;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA,EACb;AAEA,MAAI,SAAS;AAAA,IACZ,SAAS;AAAA,IACT,YAAY;AAAA,EACb;AAEA,MAAI,SAAS;AAAA,IACZ,WAAW;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,OAAO;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,IACT;AAAA,IACA,UAAU;AAAA,MACT,SAAS;AAAA,MACT,QAAQ;AAAA,IACT;AAAA,IACA,iBAAiB;AAAA;AAAA,IACjB,QAAQ;AAAA;AAAA,IACR,aAAa;AAAA,IACb,WAAW;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,WAAW;AAAA,IACX,SAAS;AAAA,MACR;AAAA,MACA;AAAA,QACC,SAAS;AAAA,QACT,QAAQ;AAAA,UACP,QAAQ;AAAA,UACR,UAAU;AAAA,UACV,YAAY;AAAA,UACZ,eAAe;AAAA,QAChB;AAAA,MACD;AAAA,IACD;AAAA,IACA,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA;AAAA;AAAA,MAGX;AAAA,IACD;AAAA,IACA,UAAU;AAAA,IACV,eAAe;AAAA,EAChB;AAEA,SAAO,eAAe,IAAI;AAAA,IACzB,SAAS;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,MACP,aAAa;AAAA,QACZ,SAAS;AAAA,QACT,OAAO;AAAA,MACR;AAAA,MACA,MAAM;AAAA,IACP;AAAA,EACD;AACA,SAAO,MAAM,IAAI;AAAA,IAChB,SAAS;AAAA,IACT,QAAQ;AAAA,MACP,YAAY;AAAA,MACZ,MAAM;AAAA,IACP;AAAA,EACD;AAEA,EAAAA,OAAM,UAAU,SAAS;AAAA,IACxB,sBAAsB;AAAA,MACrB,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,QACP,UAAU;AAAA,QACV,MAAM;AAAA,MACP;AAAA,IACD;AAAA,IACA,wBAAwB;AAAA,MACvB,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,QACP,YAAY;AAAA,QACZ,MAAM;AAAA,MACP;AAAA,IACD;AAAA,IAEA,aAAa;AAAA,MACZ,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,QACP,WAAW;AAAA,QACX,MAAM;AAAA,MACP;AAAA,IACD;AAAA;AAAA;AAAA,IAIA,wBAAwB;AAAA,MACvB,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,QACP,YAAY;AAAA,UACX,SAAS;AAAA,UACT,QAAQ;AAAA,YACP,iBAAiB,OAAO;AAAA,UACzB;AAAA,QACD;AAAA,QACA,MAAM;AAAA,MACP;AAAA,IACD;AAAA;AAAA;AAAA;AAAA,IAMA,YAAY;AAAA,MACX,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,QACP,iBAAiB,OAAO;AAAA,QACxB,WAAW,OAAO;AAAA,QAClB,eAAe;AAAA,MAChB;AAAA,IACD;AAAA,IAEA,QAAQ,OAAO;AAAA,IACf,UAAU,OAAO;AAAA,IACjB,WAAW;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,IACT;AAAA,IACA,iBAAiB,OAAO;AAAA,IACxB,eAAe;AAAA,EAChB;AACD,GAAE,KAAK;",
  "names": ["Prism"]
}
